version: '3'

services:
  # PostgreSQL with PostGIS
  postgis:
    image: postgis/postgis:14-3.3
    container_name: tegola-postgis
    env_file:
      - ./config/.env
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./sql/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      - ./sql/functions:/docker-entrypoint-initdb.d/functions
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Tegola Vector Tile Server
  tegola:
    image: gospatial/tegola:latest
    container_name: tegola-server
    volumes:
      - ./config/tegola.toml:/opt/tegola_config.toml
      - ./cache:/tmp/tegola-cache
    ports:
      - "${TEGOLA_PORT:-8080}:8080"
    command: ["serve", "--config", "/opt/tegola_config.toml"]
    depends_on:
      postgis:
        condition: service_healthy
    environment:
      TEGOLA_SQL_DEBUG: "${TEGOLA_SQL_DEBUG:-false}"

  # pgAdmin for PostgreSQL database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: tegola-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@example.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "False"
      PGADMIN_CONFIG_LOGIN_BANNER: "'Welcome to pgAdmin for Tegola PostgreSQL'"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      - postgis
    restart: unless-stopped

  # Optional: Web server for static files and proxying
  nginx:
    image: nginx:alpine
    container_name: tegola-nginx
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./styles:/usr/share/nginx/html/styles
    ports:
      - "80:80"
    depends_on:
      - tegola

volumes:
  pg_data:
  pgadmin_data: